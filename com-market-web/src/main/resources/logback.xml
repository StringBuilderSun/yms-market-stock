<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder charset="utf-8"> <!-- encoder 可以指定字符集，对于中文输出有意义 -->
			<!-- %.-1level 只显示信息级别的首字母,%-5level 左对齐显示信息级别全称 -->
			<!-- 如需自定义关键字，用 %mdc{键名} 表示,程序中用MDC.put("键名","键值")设置，可动态设置 [%logger:%line]-->
			<Pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level][%C{40}][%line][%M] --%mdc{client} [%X{TRACE_LOG_ID}] %msg%n</Pattern>
		</encoder>>
	</appender>

	<appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>${logger.logLevel}</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<File>${logger.logback.logpath}/webgate-outerbank.log</File>
		<encoder>
			<Pattern>[%date] [%-5level][%C{40}][%line][%M] --%mdc{client} [%X{TRACE_LOG_ID}] %msg%n</Pattern>
			<charset>UTF-8</charset>
		</encoder>
		<!-- 配置滚动的策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${logger.logback.logpath}/webgate-outerbank.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<maxHistory>30</maxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>512MB</maxFileSize>
			</TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
	</appender>

	<!-- 异步输出 -->
	<appender name ="asyncFile" class= "ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold >0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>2048</queueSize>
		<includeCallerData>true</includeCallerData>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref ="logfile"/>
	</appender>

	<root level="INFO">
		<appender-ref ref="asyncFile" />
	</root>

	<logger name="com.ibatis" level="${logger.outside.logLevel}"/>
	<logger name="org.springframework" level="${logger.outside.logLevel}"/>
	<logger name="java.sql.PreparedStatement" level="${logger.outside.logLevel}"/>
	<logger name="org.springframework.web.servlet.DispatcherServlet" level="${logger.outside.logLevel}"/>
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="${logger.outside.logLevel}"/>
	<logger name="java.sql" level="${logger.outside.logLevel}"/>
	<logger name="org.apache.commons" level="${logger.outside.logLevel}"/>
	<logger name="java.sql.Statement" level="${logger.outside.logLevel}"/>
	<logger name="org.springframework.web.context.support.XmlWebApplicationContext" level="${logger.outside.logLevel}"/>
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="${logger.outside.logLevel}"/>
	<logger name="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" level="${logger.outside.logLevel}"/>
	<logger name="java.sql.ResultSet" level="${logger.outside.logLevel}"/>
	<logger name="java.sql.Connection" level="${logger.outside.logLevel}"/>
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="${logger.outside.logLevel}"/>
	<logger name="org.jdbcdslog" level="${logger.outside.logLevel}" />

	<logger name="com.bestpay.tradeprod" level="${logger.logLevel}" >
		<appender-ref ref="logfile"/>
	</logger>

	<!-- 输出到控制台和文件，可定义更多的 Appender -->
	<root level="${logger.logLevel}">
		<appender-ref ref="STDOUT"/>
	</root>

</configuration>